version: '3.4'

services:
  webapi:
    image: ${DOCKER_REGISTRY-}webapi
    build:
      context: .
      dockerfile: WebApi/Dockerfile
    networks:
      - net_pets

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    networks:
      - net_pets
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    networks:
      - net_pets
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
        KAFKA_BROKER_ID: 1
        KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
        KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
        KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
        KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
        KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        KAFKA_MESSAGE_MAX_BYTES: 10000000
    volumes:
      - ./config/server.properties:/etc/kafka/server.properties
      - ./config/wait-for-it.sh:/wait-for-it.sh
    command: ["/wait-for-it.sh", "zookeeper:2181", "--", "/etc/confluent/docker/run"]

  consumer:
    image: ${DOCKER_REGISTRY-}consumer
    build:
      context: .
      dockerfile: Consumer/Dockerfile
    networks:
      - net_pets
    depends_on:
      - kafka

networks:
  net_pets:
    driver: bridge

