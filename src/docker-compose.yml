version: '3.4'

services:
  kafka:
    image: docker.io/bitnami/kafka:3.5
    ports:
      - "9092:9092"
    volumes:
      - "kafka_data:/bitnami"
      - ./config/server.properties:/etc/kafka/server.properties
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_MESSAGE_MAX_BYTES=500000000
    networks:
      - cavalinho

  webapi:
    networks:
      - cavalinho
    depends_on:
      - kafka
      - producer
    build:
      context: ./
      dockerfile: WebApi.Dockerfile
    ports:
      - 5002:80

  consumer:
    build:
      context: ./
      dockerfile: Consumer.Dockerfile
    networks:
      - cavalinho
     
  producer:
    build:
      context: ./
      dockerfile: Producer.Dockerfile
    networks:
      - cavalinho

volumes:
  kafka_data:
    driver: local

networks:
  cavalinho:
    driver: bridge


